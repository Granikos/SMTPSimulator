//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HydraWebClient.HydraConfigurationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Domain", Namespace="http://schemas.datacontract.org/2004/07/HydraService.Models")]
    [System.SerializableAttribute()]
    public partial class Domain : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SendConnectorIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainName {
            get {
                return this.DomainNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainNameField, value) != true)) {
                    this.DomainNameField = value;
                    this.RaisePropertyChanged("DomainName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SendConnectorId {
            get {
                return this.SendConnectorIdField;
            }
            set {
                if ((this.SendConnectorIdField.Equals(value) != true)) {
                    this.SendConnectorIdField = value;
                    this.RaisePropertyChanged("SendConnectorId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiveConnector", Namespace="http://schemas.datacontract.org/2004/07/HydraService.Models")]
    [System.SerializableAttribute()]
    public partial class ReceiveConnector : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthUsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BannerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> GreylistingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydraWebClient.HydraConfigurationService.IPRange[] RemoteIPRangesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequireAuthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydraWebClient.HydraConfigurationService.TLSSettings TLSSettingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressString {
            get {
                return this.AddressStringField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressStringField, value) != true)) {
                    this.AddressStringField = value;
                    this.RaisePropertyChanged("AddressString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthPassword {
            get {
                return this.AuthPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthPasswordField, value) != true)) {
                    this.AuthPasswordField = value;
                    this.RaisePropertyChanged("AuthPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthUsername {
            get {
                return this.AuthUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthUsernameField, value) != true)) {
                    this.AuthUsernameField = value;
                    this.RaisePropertyChanged("AuthUsername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Banner {
            get {
                return this.BannerField;
            }
            set {
                if ((object.ReferenceEquals(this.BannerField, value) != true)) {
                    this.BannerField = value;
                    this.RaisePropertyChanged("Banner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> GreylistingTime {
            get {
                return this.GreylistingTimeField;
            }
            set {
                if ((this.GreylistingTimeField.Equals(value) != true)) {
                    this.GreylistingTimeField = value;
                    this.RaisePropertyChanged("GreylistingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydraWebClient.HydraConfigurationService.IPRange[] RemoteIPRanges {
            get {
                return this.RemoteIPRangesField;
            }
            set {
                if ((object.ReferenceEquals(this.RemoteIPRangesField, value) != true)) {
                    this.RemoteIPRangesField = value;
                    this.RaisePropertyChanged("RemoteIPRanges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequireAuth {
            get {
                return this.RequireAuthField;
            }
            set {
                if ((this.RequireAuthField.Equals(value) != true)) {
                    this.RequireAuthField = value;
                    this.RaisePropertyChanged("RequireAuth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydraWebClient.HydraConfigurationService.TLSSettings TLSSettings {
            get {
                return this.TLSSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.TLSSettingsField, value) != true)) {
                    this.TLSSettingsField = value;
                    this.RaisePropertyChanged("TLSSettings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TLSSettings", Namespace="http://schemas.datacontract.org/2004/07/HydraService.Models")]
    [System.SerializableAttribute()]
    public partial class TLSSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydraWebClient.HydraConfigurationService.TLSAuthLevel AuthLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificateDomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificatePasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Net.Security.EncryptionPolicy EncryptionPolicyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFilesystemCertificateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydraWebClient.HydraConfigurationService.TLSMode ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Security.Authentication.SslProtocols SslProtocolsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidateCertificateRevocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydraWebClient.HydraConfigurationService.TLSAuthLevel AuthLevel {
            get {
                return this.AuthLevelField;
            }
            set {
                if ((this.AuthLevelField.Equals(value) != true)) {
                    this.AuthLevelField = value;
                    this.RaisePropertyChanged("AuthLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificateDomain {
            get {
                return this.CertificateDomainField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateDomainField, value) != true)) {
                    this.CertificateDomainField = value;
                    this.RaisePropertyChanged("CertificateDomain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificateName {
            get {
                return this.CertificateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateNameField, value) != true)) {
                    this.CertificateNameField = value;
                    this.RaisePropertyChanged("CertificateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificatePassword {
            get {
                return this.CertificatePasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificatePasswordField, value) != true)) {
                    this.CertificatePasswordField = value;
                    this.RaisePropertyChanged("CertificatePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Net.Security.EncryptionPolicy EncryptionPolicy {
            get {
                return this.EncryptionPolicyField;
            }
            set {
                if ((this.EncryptionPolicyField.Equals(value) != true)) {
                    this.EncryptionPolicyField = value;
                    this.RaisePropertyChanged("EncryptionPolicy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFilesystemCertificate {
            get {
                return this.IsFilesystemCertificateField;
            }
            set {
                if ((this.IsFilesystemCertificateField.Equals(value) != true)) {
                    this.IsFilesystemCertificateField = value;
                    this.RaisePropertyChanged("IsFilesystemCertificate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydraWebClient.HydraConfigurationService.TLSMode Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((this.ModeField.Equals(value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Security.Authentication.SslProtocols SslProtocols {
            get {
                return this.SslProtocolsField;
            }
            set {
                if ((this.SslProtocolsField.Equals(value) != true)) {
                    this.SslProtocolsField = value;
                    this.RaisePropertyChanged("SslProtocols");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidateCertificateRevocation {
            get {
                return this.ValidateCertificateRevocationField;
            }
            set {
                if ((this.ValidateCertificateRevocationField.Equals(value) != true)) {
                    this.ValidateCertificateRevocationField = value;
                    this.RaisePropertyChanged("ValidateCertificateRevocation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IPRange", Namespace="http://schemas.datacontract.org/2004/07/HydraCore")]
    [System.SerializableAttribute()]
    public partial class IPRange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartStringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndString {
            get {
                return this.EndStringField;
            }
            set {
                if ((object.ReferenceEquals(this.EndStringField, value) != true)) {
                    this.EndStringField = value;
                    this.RaisePropertyChanged("EndString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartString {
            get {
                return this.StartStringField;
            }
            set {
                if ((object.ReferenceEquals(this.StartStringField, value) != true)) {
                    this.StartStringField = value;
                    this.RaisePropertyChanged("StartString");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TLSAuthLevel", Namespace="http://schemas.datacontract.org/2004/07/HydraService.Models")]
    public enum TLSAuthLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EncryptionOnly = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CertificateValidation = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DomainValidation = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TLSMode", Namespace="http://schemas.datacontract.org/2004/07/HydraService.Models")]
    public enum TLSMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Enabled = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Required = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FullTunnel = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendConnector", Namespace="http://schemas.datacontract.org/2004/07/HydraService.Models")]
    [System.SerializableAttribute()]
    public partial class SendConnector : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalAddressStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemoteAddressStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemotePortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetryCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan RetryTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydraWebClient.HydraConfigurationService.TLSSettings TLSSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseAuthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseSmarthostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalAddressString {
            get {
                return this.LocalAddressStringField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalAddressStringField, value) != true)) {
                    this.LocalAddressStringField = value;
                    this.RaisePropertyChanged("LocalAddressString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RemoteAddressString {
            get {
                return this.RemoteAddressStringField;
            }
            set {
                if ((object.ReferenceEquals(this.RemoteAddressStringField, value) != true)) {
                    this.RemoteAddressStringField = value;
                    this.RaisePropertyChanged("RemoteAddressString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemotePort {
            get {
                return this.RemotePortField;
            }
            set {
                if ((this.RemotePortField.Equals(value) != true)) {
                    this.RemotePortField = value;
                    this.RaisePropertyChanged("RemotePort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetryCount {
            get {
                return this.RetryCountField;
            }
            set {
                if ((this.RetryCountField.Equals(value) != true)) {
                    this.RetryCountField = value;
                    this.RaisePropertyChanged("RetryCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan RetryTime {
            get {
                return this.RetryTimeField;
            }
            set {
                if ((this.RetryTimeField.Equals(value) != true)) {
                    this.RetryTimeField = value;
                    this.RaisePropertyChanged("RetryTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydraWebClient.HydraConfigurationService.TLSSettings TLSSettings {
            get {
                return this.TLSSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.TLSSettingsField, value) != true)) {
                    this.TLSSettingsField = value;
                    this.RaisePropertyChanged("TLSSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseAuth {
            get {
                return this.UseAuthField;
            }
            set {
                if ((this.UseAuthField.Equals(value) != true)) {
                    this.UseAuthField = value;
                    this.RaisePropertyChanged("UseAuth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseSmarthost {
            get {
                return this.UseSmarthostField;
            }
            set {
                if ((this.UseSmarthostField.Equals(value) != true)) {
                    this.UseSmarthostField = value;
                    this.RaisePropertyChanged("UseSmarthost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalUsersWithTotal", Namespace="http://schemas.datacontract.org/2004/07/HydraService.Models")]
    [System.SerializableAttribute()]
    public partial class LocalUsersWithTotal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydraWebClient.HydraConfigurationService.LocalUser[] EntitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydraWebClient.HydraConfigurationService.LocalUser[] Entities {
            get {
                return this.EntitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitiesField, value) != true)) {
                    this.EntitiesField = value;
                    this.RaisePropertyChanged("Entities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalUser", Namespace="http://schemas.datacontract.org/2004/07/HydraService.Models")]
    [System.SerializableAttribute()]
    public partial class LocalUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailboxField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mailbox {
            get {
                return this.MailboxField;
            }
            set {
                if ((object.ReferenceEquals(this.MailboxField, value) != true)) {
                    this.MailboxField = value;
                    this.RaisePropertyChanged("Mailbox");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportResult", Namespace="http://schemas.datacontract.org/2004/07/HydraService.Models")]
    [System.SerializableAttribute()]
    public partial class ImportResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OverwrittenCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportCount {
            get {
                return this.ImportCountField;
            }
            set {
                if ((this.ImportCountField.Equals(value) != true)) {
                    this.ImportCountField = value;
                    this.RaisePropertyChanged("ImportCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OverwrittenCount {
            get {
                return this.OverwrittenCountField;
            }
            set {
                if ((this.OverwrittenCountField.Equals(value) != true)) {
                    this.OverwrittenCountField = value;
                    this.RaisePropertyChanged("OverwrittenCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserTemplate", Namespace="http://schemas.datacontract.org/2004/07/HydraService.Models")]
    [System.SerializableAttribute()]
    public partial class UserTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SupportsPatternField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SupportsPattern {
            get {
                return this.SupportsPatternField;
            }
            set {
                if ((this.SupportsPatternField.Equals(value) != true)) {
                    this.SupportsPatternField = value;
                    this.RaisePropertyChanged("SupportsPattern");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalUsersWithTotal", Namespace="http://schemas.datacontract.org/2004/07/HydraService.Models")]
    [System.SerializableAttribute()]
    public partial class ExternalUsersWithTotal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HydraWebClient.HydraConfigurationService.ExternalUser[] EntitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HydraWebClient.HydraConfigurationService.ExternalUser[] Entities {
            get {
                return this.EntitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitiesField, value) != true)) {
                    this.EntitiesField = value;
                    this.RaisePropertyChanged("Entities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalUser", Namespace="http://schemas.datacontract.org/2004/07/HydraService.Models")]
    [System.SerializableAttribute()]
    public partial class ExternalUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DomainIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailboxField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DomainId {
            get {
                return this.DomainIdField;
            }
            set {
                if ((this.DomainIdField.Equals(value) != true)) {
                    this.DomainIdField = value;
                    this.RaisePropertyChanged("DomainId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mailbox {
            get {
                return this.MailboxField;
            }
            set {
                if ((object.ReferenceEquals(this.MailboxField, value) != true)) {
                    this.MailboxField = value;
                    this.RaisePropertyChanged("Mailbox");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MailMessage", Namespace="http://schemas.datacontract.org/2004/07/HydraService.Models")]
    [System.SerializableAttribute()]
    public partial class MailMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ConnectorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RecipientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ConnectorId {
            get {
                return this.ConnectorIdField;
            }
            set {
                if ((this.ConnectorIdField.Equals(value) != true)) {
                    this.ConnectorIdField = value;
                    this.RaisePropertyChanged("ConnectorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Recipients {
            get {
                return this.RecipientsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientsField, value) != true)) {
                    this.RecipientsField = value;
                    this.RaisePropertyChanged("Recipients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HydraConfigurationService.IConfigurationService")]
    public interface IConfigurationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SetProperty", ReplyAction="http://tempuri.org/IConfigurationService/SetPropertyResponse")]
        void SetProperty(string name, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SetProperty", ReplyAction="http://tempuri.org/IConfigurationService/SetPropertyResponse")]
        System.Threading.Tasks.Task SetPropertyAsync(string name, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetDomains", ReplyAction="http://tempuri.org/IConfigurationService/GetDomainsResponse")]
        HydraWebClient.HydraConfigurationService.Domain[] GetDomains();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetDomains", ReplyAction="http://tempuri.org/IConfigurationService/GetDomainsResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.Domain[]> GetDomainsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetDomain", ReplyAction="http://tempuri.org/IConfigurationService/GetDomainResponse")]
        HydraWebClient.HydraConfigurationService.Domain GetDomain(string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetDomain", ReplyAction="http://tempuri.org/IConfigurationService/GetDomainResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.Domain> GetDomainAsync(string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateDomain", ReplyAction="http://tempuri.org/IConfigurationService/UpdateDomainResponse")]
        HydraWebClient.HydraConfigurationService.Domain UpdateDomain(HydraWebClient.HydraConfigurationService.Domain domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateDomain", ReplyAction="http://tempuri.org/IConfigurationService/UpdateDomainResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.Domain> UpdateDomainAsync(HydraWebClient.HydraConfigurationService.Domain domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddDomain", ReplyAction="http://tempuri.org/IConfigurationService/AddDomainResponse")]
        HydraWebClient.HydraConfigurationService.Domain AddDomain(string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddDomain", ReplyAction="http://tempuri.org/IConfigurationService/AddDomainResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.Domain> AddDomainAsync(string domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteDomain", ReplyAction="http://tempuri.org/IConfigurationService/DeleteDomainResponse")]
        bool DeleteDomain(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteDomain", ReplyAction="http://tempuri.org/IConfigurationService/DeleteDomainResponse")]
        System.Threading.Tasks.Task<bool> DeleteDomainAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetDefaultReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetDefaultReceiveConnectorResponse")]
        HydraWebClient.HydraConfigurationService.ReceiveConnector GetDefaultReceiveConnector();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetDefaultReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetDefaultReceiveConnectorResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ReceiveConnector> GetDefaultReceiveConnectorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetReceiveConnectors", ReplyAction="http://tempuri.org/IConfigurationService/GetReceiveConnectorsResponse")]
        HydraWebClient.HydraConfigurationService.ReceiveConnector[] GetReceiveConnectors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetReceiveConnectors", ReplyAction="http://tempuri.org/IConfigurationService/GetReceiveConnectorsResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ReceiveConnector[]> GetReceiveConnectorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetReceiveConnectorResponse")]
        HydraWebClient.HydraConfigurationService.ReceiveConnector GetReceiveConnector(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetReceiveConnectorResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ReceiveConnector> GetReceiveConnectorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/AddReceiveConnectorResponse")]
        HydraWebClient.HydraConfigurationService.ReceiveConnector AddReceiveConnector(HydraWebClient.HydraConfigurationService.ReceiveConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/AddReceiveConnectorResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ReceiveConnector> AddReceiveConnectorAsync(HydraWebClient.HydraConfigurationService.ReceiveConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/UpdateReceiveConnectorResponse")]
        HydraWebClient.HydraConfigurationService.ReceiveConnector UpdateReceiveConnector(HydraWebClient.HydraConfigurationService.ReceiveConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/UpdateReceiveConnectorResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ReceiveConnector> UpdateReceiveConnectorAsync(HydraWebClient.HydraConfigurationService.ReceiveConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/DeleteReceiveConnectorResponse")]
        bool DeleteReceiveConnector(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/DeleteReceiveConnectorResponse")]
        System.Threading.Tasks.Task<bool> DeleteReceiveConnectorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetEmptySendConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetEmptySendConnectorResponse")]
        HydraWebClient.HydraConfigurationService.SendConnector GetEmptySendConnector();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetEmptySendConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetEmptySendConnectorResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.SendConnector> GetEmptySendConnectorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetDefaultSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetDefaultSendConnectorResponse")]
        HydraWebClient.HydraConfigurationService.SendConnector GetDefaultSendConnector();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetDefaultSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetDefaultSendConnectorResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.SendConnector> GetDefaultSendConnectorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SetDefaultSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/SetDefaultSendConnectorResponse")]
        bool SetDefaultSendConnector(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SetDefaultSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/SetDefaultSendConnectorResponse")]
        System.Threading.Tasks.Task<bool> SetDefaultSendConnectorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetSendConnectors", ReplyAction="http://tempuri.org/IConfigurationService/GetSendConnectorsResponse")]
        HydraWebClient.HydraConfigurationService.SendConnector[] GetSendConnectors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetSendConnectors", ReplyAction="http://tempuri.org/IConfigurationService/GetSendConnectorsResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.SendConnector[]> GetSendConnectorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetSendConnectorResponse")]
        HydraWebClient.HydraConfigurationService.SendConnector GetSendConnector(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetSendConnectorResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.SendConnector> GetSendConnectorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/AddSendConnectorResponse")]
        HydraWebClient.HydraConfigurationService.SendConnector AddSendConnector(HydraWebClient.HydraConfigurationService.SendConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/AddSendConnectorResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.SendConnector> AddSendConnectorAsync(HydraWebClient.HydraConfigurationService.SendConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/UpdateSendConnectorResponse")]
        HydraWebClient.HydraConfigurationService.SendConnector UpdateSendConnector(HydraWebClient.HydraConfigurationService.SendConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/UpdateSendConnectorResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.SendConnector> UpdateSendConnectorAsync(HydraWebClient.HydraConfigurationService.SendConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/DeleteSendConnectorResponse")]
        bool DeleteSendConnector(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/DeleteSendConnectorResponse")]
        System.Threading.Tasks.Task<bool> DeleteSendConnectorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalUsersResponse")]
        HydraWebClient.HydraConfigurationService.LocalUsersWithTotal GetLocalUsers(int page, int perPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalUsersResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.LocalUsersWithTotal> GetLocalUsersAsync(int page, int perPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SearchLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/SearchLocalUsersResponse")]
        string[] SearchLocalUsers(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SearchLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/SearchLocalUsersResponse")]
        System.Threading.Tasks.Task<string[]> SearchLocalUsersAsync(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalUserResponse")]
        HydraWebClient.HydraConfigurationService.LocalUser GetLocalUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalUserResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.LocalUser> GetLocalUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/AddLocalUserResponse")]
        HydraWebClient.HydraConfigurationService.LocalUser AddLocalUser(HydraWebClient.HydraConfigurationService.LocalUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/AddLocalUserResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.LocalUser> AddLocalUserAsync(HydraWebClient.HydraConfigurationService.LocalUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/UpdateLocalUserResponse")]
        HydraWebClient.HydraConfigurationService.LocalUser UpdateLocalUser(HydraWebClient.HydraConfigurationService.LocalUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/UpdateLocalUserResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.LocalUser> UpdateLocalUserAsync(HydraWebClient.HydraConfigurationService.LocalUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/DeleteLocalUserResponse")]
        bool DeleteLocalUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/DeleteLocalUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteLocalUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ExportLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ExportLocalUsersResponse")]
        System.IO.Stream ExportLocalUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ExportLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ExportLocalUsersResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> ExportLocalUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ImportLocalUsersResponse")]
        HydraWebClient.HydraConfigurationService.ImportResult ImportLocalUsers(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ImportLocalUsersResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ImportResult> ImportLocalUsersAsync(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportLocalUsersWithOverwrite", ReplyAction="http://tempuri.org/IConfigurationService/ImportLocalUsersWithOverwriteResponse")]
        HydraWebClient.HydraConfigurationService.ImportResult ImportLocalUsersWithOverwrite(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportLocalUsersWithOverwrite", ReplyAction="http://tempuri.org/IConfigurationService/ImportLocalUsersWithOverwriteResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ImportResult> ImportLocalUsersWithOverwriteAsync(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GenerateLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/GenerateLocalUsersResponse")]
        bool GenerateLocalUsers(string template, string pattern, string domain, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GenerateLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/GenerateLocalUsersResponse")]
        System.Threading.Tasks.Task<bool> GenerateLocalUsersAsync(string template, string pattern, string domain, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalUserTemplates", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalUserTemplatesResponse")]
        HydraWebClient.HydraConfigurationService.UserTemplate[] GetLocalUserTemplates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalUserTemplates", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalUserTemplatesResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.UserTemplate[]> GetLocalUserTemplatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/GetExternalUsersResponse")]
        HydraWebClient.HydraConfigurationService.ExternalUsersWithTotal GetExternalUsers(int page, int perPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/GetExternalUsersResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ExternalUsersWithTotal> GetExternalUsersAsync(int page, int perPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SearchExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/SearchExternalUsersResponse")]
        string[] SearchExternalUsers(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SearchExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/SearchExternalUsersResponse")]
        System.Threading.Tasks.Task<string[]> SearchExternalUsersAsync(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/GetExternalUserResponse")]
        HydraWebClient.HydraConfigurationService.ExternalUser GetExternalUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/GetExternalUserResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ExternalUser> GetExternalUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/AddExternalUserResponse")]
        HydraWebClient.HydraConfigurationService.ExternalUser AddExternalUser(HydraWebClient.HydraConfigurationService.ExternalUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/AddExternalUserResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ExternalUser> AddExternalUserAsync(HydraWebClient.HydraConfigurationService.ExternalUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/UpdateExternalUserResponse")]
        HydraWebClient.HydraConfigurationService.ExternalUser UpdateExternalUser(HydraWebClient.HydraConfigurationService.ExternalUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/UpdateExternalUserResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ExternalUser> UpdateExternalUserAsync(HydraWebClient.HydraConfigurationService.ExternalUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/DeleteExternalUserResponse")]
        bool DeleteExternalUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/DeleteExternalUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteExternalUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ExportExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ExportExternalUsersResponse")]
        System.IO.Stream ExportExternalUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ExportExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ExportExternalUsersResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> ExportExternalUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ImportExternalUsersResponse")]
        HydraWebClient.HydraConfigurationService.ImportResult ImportExternalUsers(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ImportExternalUsersResponse")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ImportResult> ImportExternalUsersAsync(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportExternalUsersWithOverwrite", ReplyAction="http://tempuri.org/IConfigurationService/ImportExternalUsersWithOverwriteResponse" +
            "")]
        HydraWebClient.HydraConfigurationService.ImportResult ImportExternalUsersWithOverwrite(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportExternalUsersWithOverwrite", ReplyAction="http://tempuri.org/IConfigurationService/ImportExternalUsersWithOverwriteResponse" +
            "")]
        System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ImportResult> ImportExternalUsersWithOverwriteAsync(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetCertificateFiles", ReplyAction="http://tempuri.org/IConfigurationService/GetCertificateFilesResponse")]
        string[] GetCertificateFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetCertificateFiles", ReplyAction="http://tempuri.org/IConfigurationService/GetCertificateFilesResponse")]
        System.Threading.Tasks.Task<string[]> GetCertificateFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/Start", ReplyAction="http://tempuri.org/IConfigurationService/StartResponse")]
        void Start();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/Start", ReplyAction="http://tempuri.org/IConfigurationService/StartResponse")]
        System.Threading.Tasks.Task StartAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/Stop", ReplyAction="http://tempuri.org/IConfigurationService/StopResponse")]
        void Stop();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/Stop", ReplyAction="http://tempuri.org/IConfigurationService/StopResponse")]
        System.Threading.Tasks.Task StopAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/IsRunning", ReplyAction="http://tempuri.org/IConfigurationService/IsRunningResponse")]
        bool IsRunning();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/IsRunning", ReplyAction="http://tempuri.org/IConfigurationService/IsRunningResponse")]
        System.Threading.Tasks.Task<bool> IsRunningAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SendMail", ReplyAction="http://tempuri.org/IConfigurationService/SendMailResponse")]
        void SendMail(HydraWebClient.HydraConfigurationService.MailMessage msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SendMail", ReplyAction="http://tempuri.org/IConfigurationService/SendMailResponse")]
        System.Threading.Tasks.Task SendMailAsync(HydraWebClient.HydraConfigurationService.MailMessage msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConfigurationServiceChannel : HydraWebClient.HydraConfigurationService.IConfigurationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConfigurationServiceClient : System.ServiceModel.ClientBase<HydraWebClient.HydraConfigurationService.IConfigurationService>, HydraWebClient.HydraConfigurationService.IConfigurationService {
        
        public ConfigurationServiceClient() {
        }
        
        public ConfigurationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConfigurationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigurationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigurationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SetProperty(string name, string value) {
            base.Channel.SetProperty(name, value);
        }
        
        public System.Threading.Tasks.Task SetPropertyAsync(string name, string value) {
            return base.Channel.SetPropertyAsync(name, value);
        }
        
        public HydraWebClient.HydraConfigurationService.Domain[] GetDomains() {
            return base.Channel.GetDomains();
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.Domain[]> GetDomainsAsync() {
            return base.Channel.GetDomainsAsync();
        }
        
        public HydraWebClient.HydraConfigurationService.Domain GetDomain(string domain) {
            return base.Channel.GetDomain(domain);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.Domain> GetDomainAsync(string domain) {
            return base.Channel.GetDomainAsync(domain);
        }
        
        public HydraWebClient.HydraConfigurationService.Domain UpdateDomain(HydraWebClient.HydraConfigurationService.Domain domain) {
            return base.Channel.UpdateDomain(domain);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.Domain> UpdateDomainAsync(HydraWebClient.HydraConfigurationService.Domain domain) {
            return base.Channel.UpdateDomainAsync(domain);
        }
        
        public HydraWebClient.HydraConfigurationService.Domain AddDomain(string domain) {
            return base.Channel.AddDomain(domain);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.Domain> AddDomainAsync(string domain) {
            return base.Channel.AddDomainAsync(domain);
        }
        
        public bool DeleteDomain(int id) {
            return base.Channel.DeleteDomain(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDomainAsync(int id) {
            return base.Channel.DeleteDomainAsync(id);
        }
        
        public HydraWebClient.HydraConfigurationService.ReceiveConnector GetDefaultReceiveConnector() {
            return base.Channel.GetDefaultReceiveConnector();
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ReceiveConnector> GetDefaultReceiveConnectorAsync() {
            return base.Channel.GetDefaultReceiveConnectorAsync();
        }
        
        public HydraWebClient.HydraConfigurationService.ReceiveConnector[] GetReceiveConnectors() {
            return base.Channel.GetReceiveConnectors();
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ReceiveConnector[]> GetReceiveConnectorsAsync() {
            return base.Channel.GetReceiveConnectorsAsync();
        }
        
        public HydraWebClient.HydraConfigurationService.ReceiveConnector GetReceiveConnector(int id) {
            return base.Channel.GetReceiveConnector(id);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ReceiveConnector> GetReceiveConnectorAsync(int id) {
            return base.Channel.GetReceiveConnectorAsync(id);
        }
        
        public HydraWebClient.HydraConfigurationService.ReceiveConnector AddReceiveConnector(HydraWebClient.HydraConfigurationService.ReceiveConnector connector) {
            return base.Channel.AddReceiveConnector(connector);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ReceiveConnector> AddReceiveConnectorAsync(HydraWebClient.HydraConfigurationService.ReceiveConnector connector) {
            return base.Channel.AddReceiveConnectorAsync(connector);
        }
        
        public HydraWebClient.HydraConfigurationService.ReceiveConnector UpdateReceiveConnector(HydraWebClient.HydraConfigurationService.ReceiveConnector connector) {
            return base.Channel.UpdateReceiveConnector(connector);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ReceiveConnector> UpdateReceiveConnectorAsync(HydraWebClient.HydraConfigurationService.ReceiveConnector connector) {
            return base.Channel.UpdateReceiveConnectorAsync(connector);
        }
        
        public bool DeleteReceiveConnector(int id) {
            return base.Channel.DeleteReceiveConnector(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteReceiveConnectorAsync(int id) {
            return base.Channel.DeleteReceiveConnectorAsync(id);
        }
        
        public HydraWebClient.HydraConfigurationService.SendConnector GetEmptySendConnector() {
            return base.Channel.GetEmptySendConnector();
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.SendConnector> GetEmptySendConnectorAsync() {
            return base.Channel.GetEmptySendConnectorAsync();
        }
        
        public HydraWebClient.HydraConfigurationService.SendConnector GetDefaultSendConnector() {
            return base.Channel.GetDefaultSendConnector();
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.SendConnector> GetDefaultSendConnectorAsync() {
            return base.Channel.GetDefaultSendConnectorAsync();
        }
        
        public bool SetDefaultSendConnector(int id) {
            return base.Channel.SetDefaultSendConnector(id);
        }
        
        public System.Threading.Tasks.Task<bool> SetDefaultSendConnectorAsync(int id) {
            return base.Channel.SetDefaultSendConnectorAsync(id);
        }
        
        public HydraWebClient.HydraConfigurationService.SendConnector[] GetSendConnectors() {
            return base.Channel.GetSendConnectors();
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.SendConnector[]> GetSendConnectorsAsync() {
            return base.Channel.GetSendConnectorsAsync();
        }
        
        public HydraWebClient.HydraConfigurationService.SendConnector GetSendConnector(int id) {
            return base.Channel.GetSendConnector(id);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.SendConnector> GetSendConnectorAsync(int id) {
            return base.Channel.GetSendConnectorAsync(id);
        }
        
        public HydraWebClient.HydraConfigurationService.SendConnector AddSendConnector(HydraWebClient.HydraConfigurationService.SendConnector connector) {
            return base.Channel.AddSendConnector(connector);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.SendConnector> AddSendConnectorAsync(HydraWebClient.HydraConfigurationService.SendConnector connector) {
            return base.Channel.AddSendConnectorAsync(connector);
        }
        
        public HydraWebClient.HydraConfigurationService.SendConnector UpdateSendConnector(HydraWebClient.HydraConfigurationService.SendConnector connector) {
            return base.Channel.UpdateSendConnector(connector);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.SendConnector> UpdateSendConnectorAsync(HydraWebClient.HydraConfigurationService.SendConnector connector) {
            return base.Channel.UpdateSendConnectorAsync(connector);
        }
        
        public bool DeleteSendConnector(int id) {
            return base.Channel.DeleteSendConnector(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSendConnectorAsync(int id) {
            return base.Channel.DeleteSendConnectorAsync(id);
        }
        
        public HydraWebClient.HydraConfigurationService.LocalUsersWithTotal GetLocalUsers(int page, int perPage) {
            return base.Channel.GetLocalUsers(page, perPage);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.LocalUsersWithTotal> GetLocalUsersAsync(int page, int perPage) {
            return base.Channel.GetLocalUsersAsync(page, perPage);
        }
        
        public string[] SearchLocalUsers(string search) {
            return base.Channel.SearchLocalUsers(search);
        }
        
        public System.Threading.Tasks.Task<string[]> SearchLocalUsersAsync(string search) {
            return base.Channel.SearchLocalUsersAsync(search);
        }
        
        public HydraWebClient.HydraConfigurationService.LocalUser GetLocalUser(int id) {
            return base.Channel.GetLocalUser(id);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.LocalUser> GetLocalUserAsync(int id) {
            return base.Channel.GetLocalUserAsync(id);
        }
        
        public HydraWebClient.HydraConfigurationService.LocalUser AddLocalUser(HydraWebClient.HydraConfigurationService.LocalUser user) {
            return base.Channel.AddLocalUser(user);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.LocalUser> AddLocalUserAsync(HydraWebClient.HydraConfigurationService.LocalUser user) {
            return base.Channel.AddLocalUserAsync(user);
        }
        
        public HydraWebClient.HydraConfigurationService.LocalUser UpdateLocalUser(HydraWebClient.HydraConfigurationService.LocalUser user) {
            return base.Channel.UpdateLocalUser(user);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.LocalUser> UpdateLocalUserAsync(HydraWebClient.HydraConfigurationService.LocalUser user) {
            return base.Channel.UpdateLocalUserAsync(user);
        }
        
        public bool DeleteLocalUser(int id) {
            return base.Channel.DeleteLocalUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLocalUserAsync(int id) {
            return base.Channel.DeleteLocalUserAsync(id);
        }
        
        public System.IO.Stream ExportLocalUsers() {
            return base.Channel.ExportLocalUsers();
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> ExportLocalUsersAsync() {
            return base.Channel.ExportLocalUsersAsync();
        }
        
        public HydraWebClient.HydraConfigurationService.ImportResult ImportLocalUsers(System.IO.Stream stream) {
            return base.Channel.ImportLocalUsers(stream);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ImportResult> ImportLocalUsersAsync(System.IO.Stream stream) {
            return base.Channel.ImportLocalUsersAsync(stream);
        }
        
        public HydraWebClient.HydraConfigurationService.ImportResult ImportLocalUsersWithOverwrite(System.IO.Stream stream) {
            return base.Channel.ImportLocalUsersWithOverwrite(stream);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ImportResult> ImportLocalUsersWithOverwriteAsync(System.IO.Stream stream) {
            return base.Channel.ImportLocalUsersWithOverwriteAsync(stream);
        }
        
        public bool GenerateLocalUsers(string template, string pattern, string domain, int count) {
            return base.Channel.GenerateLocalUsers(template, pattern, domain, count);
        }
        
        public System.Threading.Tasks.Task<bool> GenerateLocalUsersAsync(string template, string pattern, string domain, int count) {
            return base.Channel.GenerateLocalUsersAsync(template, pattern, domain, count);
        }
        
        public HydraWebClient.HydraConfigurationService.UserTemplate[] GetLocalUserTemplates() {
            return base.Channel.GetLocalUserTemplates();
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.UserTemplate[]> GetLocalUserTemplatesAsync() {
            return base.Channel.GetLocalUserTemplatesAsync();
        }
        
        public HydraWebClient.HydraConfigurationService.ExternalUsersWithTotal GetExternalUsers(int page, int perPage) {
            return base.Channel.GetExternalUsers(page, perPage);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ExternalUsersWithTotal> GetExternalUsersAsync(int page, int perPage) {
            return base.Channel.GetExternalUsersAsync(page, perPage);
        }
        
        public string[] SearchExternalUsers(string search) {
            return base.Channel.SearchExternalUsers(search);
        }
        
        public System.Threading.Tasks.Task<string[]> SearchExternalUsersAsync(string search) {
            return base.Channel.SearchExternalUsersAsync(search);
        }
        
        public HydraWebClient.HydraConfigurationService.ExternalUser GetExternalUser(int id) {
            return base.Channel.GetExternalUser(id);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ExternalUser> GetExternalUserAsync(int id) {
            return base.Channel.GetExternalUserAsync(id);
        }
        
        public HydraWebClient.HydraConfigurationService.ExternalUser AddExternalUser(HydraWebClient.HydraConfigurationService.ExternalUser user) {
            return base.Channel.AddExternalUser(user);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ExternalUser> AddExternalUserAsync(HydraWebClient.HydraConfigurationService.ExternalUser user) {
            return base.Channel.AddExternalUserAsync(user);
        }
        
        public HydraWebClient.HydraConfigurationService.ExternalUser UpdateExternalUser(HydraWebClient.HydraConfigurationService.ExternalUser user) {
            return base.Channel.UpdateExternalUser(user);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ExternalUser> UpdateExternalUserAsync(HydraWebClient.HydraConfigurationService.ExternalUser user) {
            return base.Channel.UpdateExternalUserAsync(user);
        }
        
        public bool DeleteExternalUser(int id) {
            return base.Channel.DeleteExternalUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteExternalUserAsync(int id) {
            return base.Channel.DeleteExternalUserAsync(id);
        }
        
        public System.IO.Stream ExportExternalUsers() {
            return base.Channel.ExportExternalUsers();
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> ExportExternalUsersAsync() {
            return base.Channel.ExportExternalUsersAsync();
        }
        
        public HydraWebClient.HydraConfigurationService.ImportResult ImportExternalUsers(System.IO.Stream stream) {
            return base.Channel.ImportExternalUsers(stream);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ImportResult> ImportExternalUsersAsync(System.IO.Stream stream) {
            return base.Channel.ImportExternalUsersAsync(stream);
        }
        
        public HydraWebClient.HydraConfigurationService.ImportResult ImportExternalUsersWithOverwrite(System.IO.Stream stream) {
            return base.Channel.ImportExternalUsersWithOverwrite(stream);
        }
        
        public System.Threading.Tasks.Task<HydraWebClient.HydraConfigurationService.ImportResult> ImportExternalUsersWithOverwriteAsync(System.IO.Stream stream) {
            return base.Channel.ImportExternalUsersWithOverwriteAsync(stream);
        }
        
        public string[] GetCertificateFiles() {
            return base.Channel.GetCertificateFiles();
        }
        
        public System.Threading.Tasks.Task<string[]> GetCertificateFilesAsync() {
            return base.Channel.GetCertificateFilesAsync();
        }
        
        public void Start() {
            base.Channel.Start();
        }
        
        public System.Threading.Tasks.Task StartAsync() {
            return base.Channel.StartAsync();
        }
        
        public void Stop() {
            base.Channel.Stop();
        }
        
        public System.Threading.Tasks.Task StopAsync() {
            return base.Channel.StopAsync();
        }
        
        public bool IsRunning() {
            return base.Channel.IsRunning();
        }
        
        public System.Threading.Tasks.Task<bool> IsRunningAsync() {
            return base.Channel.IsRunningAsync();
        }
        
        public void SendMail(HydraWebClient.HydraConfigurationService.MailMessage msg) {
            base.Channel.SendMail(msg);
        }
        
        public System.Threading.Tasks.Task SendMailAsync(HydraWebClient.HydraConfigurationService.MailMessage msg) {
            return base.Channel.SendMailAsync(msg);
        }
    }
}
