//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Granikos.Hydra.WebClient.HydraConfigurationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VersionInfo", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    [System.SerializableAttribute()]
    public partial struct VersionInfo : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BuildDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Granikos.Hydra.WebClient.HydraConfigurationService.Version VersionField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BuildDate {
            get {
                return this.BuildDateField;
            }
            set {
                if ((this.BuildDateField.Equals(value) != true)) {
                    this.BuildDateField = value;
                    this.RaisePropertyChanged("BuildDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Granikos.Hydra.WebClient.HydraConfigurationService.Version Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Version", Namespace="http://schemas.datacontract.org/2004/07/System")]
    [System.SerializableAttribute()]
    public partial class Version : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int _BuildField;
        
        private int _MajorField;
        
        private int _MinorField;
        
        private int _RevisionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _Build {
            get {
                return this._BuildField;
            }
            set {
                if ((this._BuildField.Equals(value) != true)) {
                    this._BuildField = value;
                    this.RaisePropertyChanged("_Build");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _Major {
            get {
                return this._MajorField;
            }
            set {
                if ((this._MajorField.Equals(value) != true)) {
                    this._MajorField = value;
                    this.RaisePropertyChanged("_Major");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _Minor {
            get {
                return this._MinorField;
            }
            set {
                if ((this._MinorField.Equals(value) != true)) {
                    this._MinorField = value;
                    this.RaisePropertyChanged("_Minor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _Revision {
            get {
                return this._RevisionField;
            }
            set {
                if ((this._RevisionField.Equals(value) != true)) {
                    this._RevisionField = value;
                    this.RaisePropertyChanged("_Revision");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MailboxGroup", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    [System.SerializableAttribute()]
    public partial class MailboxGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] MailboxIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] MailboxIds {
            get {
                return this.MailboxIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.MailboxIdsField, value) != true)) {
                    this.MailboxIdsField = value;
                    this.RaisePropertyChanged("MailboxIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiveConnector", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    [System.SerializableAttribute()]
    public partial class ReceiveConnector : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthUsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BannerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> GreylistingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Granikos.Hydra.WebClient.HydraConfigurationService.IPRange[] RemoteIPRangesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequireAuthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Granikos.Hydra.WebClient.HydraConfigurationService.TLSSettings TLSSettingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressString {
            get {
                return this.AddressStringField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressStringField, value) != true)) {
                    this.AddressStringField = value;
                    this.RaisePropertyChanged("AddressString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthPassword {
            get {
                return this.AuthPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthPasswordField, value) != true)) {
                    this.AuthPasswordField = value;
                    this.RaisePropertyChanged("AuthPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthUsername {
            get {
                return this.AuthUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthUsernameField, value) != true)) {
                    this.AuthUsernameField = value;
                    this.RaisePropertyChanged("AuthUsername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Banner {
            get {
                return this.BannerField;
            }
            set {
                if ((object.ReferenceEquals(this.BannerField, value) != true)) {
                    this.BannerField = value;
                    this.RaisePropertyChanged("Banner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> GreylistingTime {
            get {
                return this.GreylistingTimeField;
            }
            set {
                if ((this.GreylistingTimeField.Equals(value) != true)) {
                    this.GreylistingTimeField = value;
                    this.RaisePropertyChanged("GreylistingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Granikos.Hydra.WebClient.HydraConfigurationService.IPRange[] RemoteIPRanges {
            get {
                return this.RemoteIPRangesField;
            }
            set {
                if ((object.ReferenceEquals(this.RemoteIPRangesField, value) != true)) {
                    this.RemoteIPRangesField = value;
                    this.RaisePropertyChanged("RemoteIPRanges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequireAuth {
            get {
                return this.RequireAuthField;
            }
            set {
                if ((this.RequireAuthField.Equals(value) != true)) {
                    this.RequireAuthField = value;
                    this.RaisePropertyChanged("RequireAuth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Granikos.Hydra.WebClient.HydraConfigurationService.TLSSettings TLSSettings {
            get {
                return this.TLSSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.TLSSettingsField, value) != true)) {
                    this.TLSSettingsField = value;
                    this.RaisePropertyChanged("TLSSettings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TLSSettings", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    [System.SerializableAttribute()]
    public partial class TLSSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Granikos.Hydra.WebClient.HydraConfigurationService.TLSAuthLevel AuthLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificateDomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificatePasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Net.Security.EncryptionPolicy EncryptionPolicyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFilesystemCertificateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Granikos.Hydra.WebClient.HydraConfigurationService.TLSMode ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Security.Authentication.SslProtocols SslProtocolsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidateCertificateRevocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Granikos.Hydra.WebClient.HydraConfigurationService.TLSAuthLevel AuthLevel {
            get {
                return this.AuthLevelField;
            }
            set {
                if ((this.AuthLevelField.Equals(value) != true)) {
                    this.AuthLevelField = value;
                    this.RaisePropertyChanged("AuthLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificateDomain {
            get {
                return this.CertificateDomainField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateDomainField, value) != true)) {
                    this.CertificateDomainField = value;
                    this.RaisePropertyChanged("CertificateDomain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificateName {
            get {
                return this.CertificateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateNameField, value) != true)) {
                    this.CertificateNameField = value;
                    this.RaisePropertyChanged("CertificateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificatePassword {
            get {
                return this.CertificatePasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificatePasswordField, value) != true)) {
                    this.CertificatePasswordField = value;
                    this.RaisePropertyChanged("CertificatePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Net.Security.EncryptionPolicy EncryptionPolicy {
            get {
                return this.EncryptionPolicyField;
            }
            set {
                if ((this.EncryptionPolicyField.Equals(value) != true)) {
                    this.EncryptionPolicyField = value;
                    this.RaisePropertyChanged("EncryptionPolicy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFilesystemCertificate {
            get {
                return this.IsFilesystemCertificateField;
            }
            set {
                if ((this.IsFilesystemCertificateField.Equals(value) != true)) {
                    this.IsFilesystemCertificateField = value;
                    this.RaisePropertyChanged("IsFilesystemCertificate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Granikos.Hydra.WebClient.HydraConfigurationService.TLSMode Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((this.ModeField.Equals(value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Security.Authentication.SslProtocols SslProtocols {
            get {
                return this.SslProtocolsField;
            }
            set {
                if ((this.SslProtocolsField.Equals(value) != true)) {
                    this.SslProtocolsField = value;
                    this.RaisePropertyChanged("SslProtocols");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidateCertificateRevocation {
            get {
                return this.ValidateCertificateRevocationField;
            }
            set {
                if ((this.ValidateCertificateRevocationField.Equals(value) != true)) {
                    this.ValidateCertificateRevocationField = value;
                    this.RaisePropertyChanged("ValidateCertificateRevocation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IPRange", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Core")]
    [System.SerializableAttribute()]
    public partial class IPRange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartStringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndString {
            get {
                return this.EndStringField;
            }
            set {
                if ((object.ReferenceEquals(this.EndStringField, value) != true)) {
                    this.EndStringField = value;
                    this.RaisePropertyChanged("EndString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartString {
            get {
                return this.StartStringField;
            }
            set {
                if ((object.ReferenceEquals(this.StartStringField, value) != true)) {
                    this.StartStringField = value;
                    this.RaisePropertyChanged("StartString");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TLSAuthLevel", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    public enum TLSAuthLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EncryptionOnly = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CertificateValidation = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DomainValidation = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TLSMode", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    public enum TLSMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Enabled = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Required = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FullTunnel = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendConnector", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    [System.SerializableAttribute()]
    public partial class SendConnector : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] DomainsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalAddressStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemoteAddressStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemotePortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetryCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan RetryTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Granikos.Hydra.WebClient.HydraConfigurationService.TLSSettings TLSSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseAuthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseSmarthostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Domains {
            get {
                return this.DomainsField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainsField, value) != true)) {
                    this.DomainsField = value;
                    this.RaisePropertyChanged("Domains");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalAddressString {
            get {
                return this.LocalAddressStringField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalAddressStringField, value) != true)) {
                    this.LocalAddressStringField = value;
                    this.RaisePropertyChanged("LocalAddressString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RemoteAddressString {
            get {
                return this.RemoteAddressStringField;
            }
            set {
                if ((object.ReferenceEquals(this.RemoteAddressStringField, value) != true)) {
                    this.RemoteAddressStringField = value;
                    this.RaisePropertyChanged("RemoteAddressString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemotePort {
            get {
                return this.RemotePortField;
            }
            set {
                if ((this.RemotePortField.Equals(value) != true)) {
                    this.RemotePortField = value;
                    this.RaisePropertyChanged("RemotePort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetryCount {
            get {
                return this.RetryCountField;
            }
            set {
                if ((this.RetryCountField.Equals(value) != true)) {
                    this.RetryCountField = value;
                    this.RaisePropertyChanged("RetryCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan RetryTime {
            get {
                return this.RetryTimeField;
            }
            set {
                if ((this.RetryTimeField.Equals(value) != true)) {
                    this.RetryTimeField = value;
                    this.RaisePropertyChanged("RetryTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Granikos.Hydra.WebClient.HydraConfigurationService.TLSSettings TLSSettings {
            get {
                return this.TLSSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.TLSSettingsField, value) != true)) {
                    this.TLSSettingsField = value;
                    this.RaisePropertyChanged("TLSSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseAuth {
            get {
                return this.UseAuthField;
            }
            set {
                if ((this.UseAuthField.Equals(value) != true)) {
                    this.UseAuthField = value;
                    this.RaisePropertyChanged("UseAuth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseSmarthost {
            get {
                return this.UseSmarthostField;
            }
            set {
                if ((this.UseSmarthostField.Equals(value) != true)) {
                    this.UseSmarthostField = value;
                    this.RaisePropertyChanged("UseSmarthost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsersWithTotal", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    [System.SerializableAttribute()]
    public partial class UsersWithTotal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Granikos.Hydra.WebClient.HydraConfigurationService.User[] EntitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Granikos.Hydra.WebClient.HydraConfigurationService.User[] Entities {
            get {
                return this.EntitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitiesField, value) != true)) {
                    this.EntitiesField = value;
                    this.RaisePropertyChanged("Entities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailboxField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mailbox {
            get {
                return this.MailboxField;
            }
            set {
                if ((object.ReferenceEquals(this.MailboxField, value) != true)) {
                    this.MailboxField = value;
                    this.RaisePropertyChanged("Mailbox");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportResult", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    [System.SerializableAttribute()]
    public partial class ImportResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OverwrittenCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportCount {
            get {
                return this.ImportCountField;
            }
            set {
                if ((this.ImportCountField.Equals(value) != true)) {
                    this.ImportCountField = value;
                    this.RaisePropertyChanged("ImportCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OverwrittenCount {
            get {
                return this.OverwrittenCountField;
            }
            set {
                if ((this.OverwrittenCountField.Equals(value) != true)) {
                    this.OverwrittenCountField = value;
                    this.RaisePropertyChanged("OverwrittenCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserTemplate", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    [System.SerializableAttribute()]
    public partial class UserTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SupportsPatternField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SupportsPattern {
            get {
                return this.SupportsPatternField;
            }
            set {
                if ((this.SupportsPatternField.Equals(value) != true)) {
                    this.SupportsPatternField = value;
                    this.RaisePropertyChanged("SupportsPattern");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeTable", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    [System.SerializableAttribute()]
    public partial class TimeTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttachmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Granikos.Hydra.WebClient.HydraConfigurationService.AttachmentType AttachmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxRecipientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinRecipientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> ParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Granikos.Hydra.WebClient.HydraConfigurationService.ProtocolLevel ProtocolLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecipientDomainIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientMailboxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportMailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Granikos.Hydra.WebClient.HydraConfigurationService.ReportType ReportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector SendConnectorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SendEicarFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SenderDomainIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderMailboxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StaticRecipientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StaticSenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] TimeDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attachment {
            get {
                return this.AttachmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentField, value) != true)) {
                    this.AttachmentField = value;
                    this.RaisePropertyChanged("Attachment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Granikos.Hydra.WebClient.HydraConfigurationService.AttachmentType AttachmentType {
            get {
                return this.AttachmentTypeField;
            }
            set {
                if ((this.AttachmentTypeField.Equals(value) != true)) {
                    this.AttachmentTypeField = value;
                    this.RaisePropertyChanged("AttachmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailContent {
            get {
                return this.MailContentField;
            }
            set {
                if ((object.ReferenceEquals(this.MailContentField, value) != true)) {
                    this.MailContentField = value;
                    this.RaisePropertyChanged("MailContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailType {
            get {
                return this.MailTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MailTypeField, value) != true)) {
                    this.MailTypeField = value;
                    this.RaisePropertyChanged("MailType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxRecipients {
            get {
                return this.MaxRecipientsField;
            }
            set {
                if ((this.MaxRecipientsField.Equals(value) != true)) {
                    this.MaxRecipientsField = value;
                    this.RaisePropertyChanged("MaxRecipients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinRecipients {
            get {
                return this.MinRecipientsField;
            }
            set {
                if ((this.MinRecipientsField.Equals(value) != true)) {
                    this.MinRecipientsField = value;
                    this.RaisePropertyChanged("MinRecipients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Granikos.Hydra.WebClient.HydraConfigurationService.ProtocolLevel ProtocolLevel {
            get {
                return this.ProtocolLevelField;
            }
            set {
                if ((this.ProtocolLevelField.Equals(value) != true)) {
                    this.ProtocolLevelField = value;
                    this.RaisePropertyChanged("ProtocolLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecipientDomainId {
            get {
                return this.RecipientDomainIdField;
            }
            set {
                if ((this.RecipientDomainIdField.Equals(value) != true)) {
                    this.RecipientDomainIdField = value;
                    this.RaisePropertyChanged("RecipientDomainId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientMailbox {
            get {
                return this.RecipientMailboxField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientMailboxField, value) != true)) {
                    this.RecipientMailboxField = value;
                    this.RaisePropertyChanged("RecipientMailbox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportMailAddress {
            get {
                return this.ReportMailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportMailAddressField, value) != true)) {
                    this.ReportMailAddressField = value;
                    this.RaisePropertyChanged("ReportMailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Granikos.Hydra.WebClient.HydraConfigurationService.ReportType ReportType {
            get {
                return this.ReportTypeField;
            }
            set {
                if ((this.ReportTypeField.Equals(value) != true)) {
                    this.ReportTypeField = value;
                    this.RaisePropertyChanged("ReportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector SendConnector {
            get {
                return this.SendConnectorField;
            }
            set {
                if ((object.ReferenceEquals(this.SendConnectorField, value) != true)) {
                    this.SendConnectorField = value;
                    this.RaisePropertyChanged("SendConnector");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SendEicarFile {
            get {
                return this.SendEicarFileField;
            }
            set {
                if ((this.SendEicarFileField.Equals(value) != true)) {
                    this.SendEicarFileField = value;
                    this.RaisePropertyChanged("SendEicarFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SenderDomainId {
            get {
                return this.SenderDomainIdField;
            }
            set {
                if ((this.SenderDomainIdField.Equals(value) != true)) {
                    this.SenderDomainIdField = value;
                    this.RaisePropertyChanged("SenderDomainId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderMailbox {
            get {
                return this.SenderMailboxField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderMailboxField, value) != true)) {
                    this.SenderMailboxField = value;
                    this.RaisePropertyChanged("SenderMailbox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StaticRecipient {
            get {
                return this.StaticRecipientField;
            }
            set {
                if ((this.StaticRecipientField.Equals(value) != true)) {
                    this.StaticRecipientField = value;
                    this.RaisePropertyChanged("StaticRecipient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StaticSender {
            get {
                return this.StaticSenderField;
            }
            set {
                if ((this.StaticSenderField.Equals(value) != true)) {
                    this.StaticSenderField = value;
                    this.RaisePropertyChanged("StaticSender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] TimeData {
            get {
                return this.TimeDataField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeDataField, value) != true)) {
                    this.TimeDataField = value;
                    this.RaisePropertyChanged("TimeData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentType", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    public enum AttachmentType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Off = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fixed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Random = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProtocolLevel", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    public enum ProtocolLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Off = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        On = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Verbose = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportType", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    public enum ReportType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Off = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Daily = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weekly = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MailMessage", Namespace="http://schemas.datacontract.org/2004/07/Granikos.Hydra.Service.Models")]
    [System.SerializableAttribute()]
    public partial class MailMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ConnectorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RecipientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ConnectorId {
            get {
                return this.ConnectorIdField;
            }
            set {
                if ((this.ConnectorIdField.Equals(value) != true)) {
                    this.ConnectorIdField = value;
                    this.RaisePropertyChanged("ConnectorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Recipients {
            get {
                return this.RecipientsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientsField, value) != true)) {
                    this.RecipientsField = value;
                    this.RaisePropertyChanged("Recipients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HydraConfigurationService.IConfigurationService")]
    public interface IConfigurationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetVersionInfo", ReplyAction="http://tempuri.org/IConfigurationService/GetVersionInfoResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.VersionInfo GetVersionInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetVersionInfo", ReplyAction="http://tempuri.org/IConfigurationService/GetVersionInfoResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.VersionInfo> GetVersionInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLogNames", ReplyAction="http://tempuri.org/IConfigurationService/GetLogNamesResponse")]
        string[] GetLogNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLogNames", ReplyAction="http://tempuri.org/IConfigurationService/GetLogNamesResponse")]
        System.Threading.Tasks.Task<string[]> GetLogNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLogFile", ReplyAction="http://tempuri.org/IConfigurationService/GetLogFileResponse")]
        System.IO.Stream GetLogFile(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLogFile", ReplyAction="http://tempuri.org/IConfigurationService/GetLogFileResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetLogFileAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SetProperty", ReplyAction="http://tempuri.org/IConfigurationService/SetPropertyResponse")]
        void SetProperty(string name, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SetProperty", ReplyAction="http://tempuri.org/IConfigurationService/SetPropertyResponse")]
        System.Threading.Tasks.Task SetPropertyAsync(string name, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalGroups", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalGroupsResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup[] GetLocalGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalGroups", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalGroupsResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup[]> GetLocalGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalGroup", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalGroupResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup GetLocalGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalGroup", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalGroupResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup> GetLocalGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateLocalGroup", ReplyAction="http://tempuri.org/IConfigurationService/UpdateLocalGroupResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup UpdateLocalGroup(Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup mailboxGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateLocalGroup", ReplyAction="http://tempuri.org/IConfigurationService/UpdateLocalGroupResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup> UpdateLocalGroupAsync(Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup mailboxGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddLocalGroup", ReplyAction="http://tempuri.org/IConfigurationService/AddLocalGroupResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup AddLocalGroup(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddLocalGroup", ReplyAction="http://tempuri.org/IConfigurationService/AddLocalGroupResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup> AddLocalGroupAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteLocalGroup", ReplyAction="http://tempuri.org/IConfigurationService/DeleteLocalGroupResponse")]
        bool DeleteLocalGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteLocalGroup", ReplyAction="http://tempuri.org/IConfigurationService/DeleteLocalGroupResponse")]
        System.Threading.Tasks.Task<bool> DeleteLocalGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetExternalGroups", ReplyAction="http://tempuri.org/IConfigurationService/GetExternalGroupsResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup[] GetExternalGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetExternalGroups", ReplyAction="http://tempuri.org/IConfigurationService/GetExternalGroupsResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup[]> GetExternalGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetExternalGroup", ReplyAction="http://tempuri.org/IConfigurationService/GetExternalGroupResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup GetExternalGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetExternalGroup", ReplyAction="http://tempuri.org/IConfigurationService/GetExternalGroupResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup> GetExternalGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateExternalGroup", ReplyAction="http://tempuri.org/IConfigurationService/UpdateExternalGroupResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup UpdateExternalGroup(Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup mailboxGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateExternalGroup", ReplyAction="http://tempuri.org/IConfigurationService/UpdateExternalGroupResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup> UpdateExternalGroupAsync(Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup mailboxGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddExternalGroup", ReplyAction="http://tempuri.org/IConfigurationService/AddExternalGroupResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup AddExternalGroup(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddExternalGroup", ReplyAction="http://tempuri.org/IConfigurationService/AddExternalGroupResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup> AddExternalGroupAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteExternalGroup", ReplyAction="http://tempuri.org/IConfigurationService/DeleteExternalGroupResponse")]
        bool DeleteExternalGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteExternalGroup", ReplyAction="http://tempuri.org/IConfigurationService/DeleteExternalGroupResponse")]
        System.Threading.Tasks.Task<bool> DeleteExternalGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetDefaultReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetDefaultReceiveConnectorResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector GetDefaultReceiveConnector();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetDefaultReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetDefaultReceiveConnectorResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector> GetDefaultReceiveConnectorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetReceiveConnectors", ReplyAction="http://tempuri.org/IConfigurationService/GetReceiveConnectorsResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector[] GetReceiveConnectors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetReceiveConnectors", ReplyAction="http://tempuri.org/IConfigurationService/GetReceiveConnectorsResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector[]> GetReceiveConnectorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetReceiveConnectorResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector GetReceiveConnector(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetReceiveConnectorResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector> GetReceiveConnectorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/AddReceiveConnectorResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector AddReceiveConnector(Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/AddReceiveConnectorResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector> AddReceiveConnectorAsync(Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/UpdateReceiveConnectorResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector UpdateReceiveConnector(Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/UpdateReceiveConnectorResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector> UpdateReceiveConnectorAsync(Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/DeleteReceiveConnectorResponse")]
        bool DeleteReceiveConnector(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteReceiveConnector", ReplyAction="http://tempuri.org/IConfigurationService/DeleteReceiveConnectorResponse")]
        System.Threading.Tasks.Task<bool> DeleteReceiveConnectorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetEmptySendConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetEmptySendConnectorResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector GetEmptySendConnector();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetEmptySendConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetEmptySendConnectorResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector> GetEmptySendConnectorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetDefaultSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetDefaultSendConnectorResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector GetDefaultSendConnector();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetDefaultSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetDefaultSendConnectorResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector> GetDefaultSendConnectorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SetDefaultSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/SetDefaultSendConnectorResponse")]
        bool SetDefaultSendConnector(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SetDefaultSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/SetDefaultSendConnectorResponse")]
        System.Threading.Tasks.Task<bool> SetDefaultSendConnectorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetSendConnectors", ReplyAction="http://tempuri.org/IConfigurationService/GetSendConnectorsResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector[] GetSendConnectors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetSendConnectors", ReplyAction="http://tempuri.org/IConfigurationService/GetSendConnectorsResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector[]> GetSendConnectorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetSendConnectorResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector GetSendConnector(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/GetSendConnectorResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector> GetSendConnectorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/AddSendConnectorResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector AddSendConnector(Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/AddSendConnectorResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector> AddSendConnectorAsync(Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/UpdateSendConnectorResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector UpdateSendConnector(Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/UpdateSendConnectorResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector> UpdateSendConnectorAsync(Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector connector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/DeleteSendConnectorResponse")]
        bool DeleteSendConnector(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteSendConnector", ReplyAction="http://tempuri.org/IConfigurationService/DeleteSendConnectorResponse")]
        System.Threading.Tasks.Task<bool> DeleteSendConnectorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalUserCount", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalUserCountResponse")]
        int GetLocalUserCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalUserCount", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalUserCountResponse")]
        System.Threading.Tasks.Task<int> GetLocalUserCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalUsersResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.UsersWithTotal GetLocalUsers(int page, int perPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalUsersResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.UsersWithTotal> GetLocalUsersAsync(int page, int perPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SearchLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/SearchLocalUsersResponse")]
        string[] SearchLocalUsers(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SearchLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/SearchLocalUsersResponse")]
        System.Threading.Tasks.Task<string[]> SearchLocalUsersAsync(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalUserResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.User GetLocalUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalUserResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.User> GetLocalUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/AddLocalUserResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.User AddLocalUser(Granikos.Hydra.WebClient.HydraConfigurationService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/AddLocalUserResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.User> AddLocalUserAsync(Granikos.Hydra.WebClient.HydraConfigurationService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/UpdateLocalUserResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.User UpdateLocalUser(Granikos.Hydra.WebClient.HydraConfigurationService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/UpdateLocalUserResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.User> UpdateLocalUserAsync(Granikos.Hydra.WebClient.HydraConfigurationService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/DeleteLocalUserResponse")]
        bool DeleteLocalUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteLocalUser", ReplyAction="http://tempuri.org/IConfigurationService/DeleteLocalUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteLocalUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ExportLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ExportLocalUsersResponse")]
        System.IO.Stream ExportLocalUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ExportLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ExportLocalUsersResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> ExportLocalUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ImportLocalUsersResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult ImportLocalUsers(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ImportLocalUsersResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult> ImportLocalUsersAsync(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportLocalUsersWithOverwrite", ReplyAction="http://tempuri.org/IConfigurationService/ImportLocalUsersWithOverwriteResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult ImportLocalUsersWithOverwrite(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportLocalUsersWithOverwrite", ReplyAction="http://tempuri.org/IConfigurationService/ImportLocalUsersWithOverwriteResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult> ImportLocalUsersWithOverwriteAsync(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GenerateLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/GenerateLocalUsersResponse")]
        bool GenerateLocalUsers(string template, string pattern, string domain, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GenerateLocalUsers", ReplyAction="http://tempuri.org/IConfigurationService/GenerateLocalUsersResponse")]
        System.Threading.Tasks.Task<bool> GenerateLocalUsersAsync(string template, string pattern, string domain, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalUserTemplates", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalUserTemplatesResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.UserTemplate[] GetLocalUserTemplates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetLocalUserTemplates", ReplyAction="http://tempuri.org/IConfigurationService/GetLocalUserTemplatesResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.UserTemplate[]> GetLocalUserTemplatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/GetExternalUsersResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.UsersWithTotal GetExternalUsers(int page, int perPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/GetExternalUsersResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.UsersWithTotal> GetExternalUsersAsync(int page, int perPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetExternalUserCount", ReplyAction="http://tempuri.org/IConfigurationService/GetExternalUserCountResponse")]
        int GetExternalUserCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetExternalUserCount", ReplyAction="http://tempuri.org/IConfigurationService/GetExternalUserCountResponse")]
        System.Threading.Tasks.Task<int> GetExternalUserCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SearchExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/SearchExternalUsersResponse")]
        string[] SearchExternalUsers(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SearchExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/SearchExternalUsersResponse")]
        System.Threading.Tasks.Task<string[]> SearchExternalUsersAsync(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/GetExternalUserResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.User GetExternalUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/GetExternalUserResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.User> GetExternalUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/AddExternalUserResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.User AddExternalUser(Granikos.Hydra.WebClient.HydraConfigurationService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/AddExternalUserResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.User> AddExternalUserAsync(Granikos.Hydra.WebClient.HydraConfigurationService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/UpdateExternalUserResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.User UpdateExternalUser(Granikos.Hydra.WebClient.HydraConfigurationService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/UpdateExternalUserResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.User> UpdateExternalUserAsync(Granikos.Hydra.WebClient.HydraConfigurationService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/DeleteExternalUserResponse")]
        bool DeleteExternalUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteExternalUser", ReplyAction="http://tempuri.org/IConfigurationService/DeleteExternalUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteExternalUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetTimeTables", ReplyAction="http://tempuri.org/IConfigurationService/GetTimeTablesResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable[] GetTimeTables();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetTimeTables", ReplyAction="http://tempuri.org/IConfigurationService/GetTimeTablesResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable[]> GetTimeTablesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetTimeTable", ReplyAction="http://tempuri.org/IConfigurationService/GetTimeTableResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable GetTimeTable(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetTimeTable", ReplyAction="http://tempuri.org/IConfigurationService/GetTimeTableResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable> GetTimeTableAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddTimeTable", ReplyAction="http://tempuri.org/IConfigurationService/AddTimeTableResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable AddTimeTable(Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable timeTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/AddTimeTable", ReplyAction="http://tempuri.org/IConfigurationService/AddTimeTableResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable> AddTimeTableAsync(Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable timeTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateTimeTable", ReplyAction="http://tempuri.org/IConfigurationService/UpdateTimeTableResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable UpdateTimeTable(Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable timeTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/UpdateTimeTable", ReplyAction="http://tempuri.org/IConfigurationService/UpdateTimeTableResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable> UpdateTimeTableAsync(Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable timeTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteTimeTable", ReplyAction="http://tempuri.org/IConfigurationService/DeleteTimeTableResponse")]
        bool DeleteTimeTable(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/DeleteTimeTable", ReplyAction="http://tempuri.org/IConfigurationService/DeleteTimeTableResponse")]
        System.Threading.Tasks.Task<bool> DeleteTimeTableAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ExportExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ExportExternalUsersResponse")]
        System.IO.Stream ExportExternalUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ExportExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ExportExternalUsersResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> ExportExternalUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ImportExternalUsersResponse")]
        Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult ImportExternalUsers(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportExternalUsers", ReplyAction="http://tempuri.org/IConfigurationService/ImportExternalUsersResponse")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult> ImportExternalUsersAsync(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportExternalUsersWithOverwrite", ReplyAction="http://tempuri.org/IConfigurationService/ImportExternalUsersWithOverwriteResponse" +
            "")]
        Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult ImportExternalUsersWithOverwrite(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/ImportExternalUsersWithOverwrite", ReplyAction="http://tempuri.org/IConfigurationService/ImportExternalUsersWithOverwriteResponse" +
            "")]
        System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult> ImportExternalUsersWithOverwriteAsync(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetCertificateFiles", ReplyAction="http://tempuri.org/IConfigurationService/GetCertificateFilesResponse")]
        string[] GetCertificateFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetCertificateFiles", ReplyAction="http://tempuri.org/IConfigurationService/GetCertificateFilesResponse")]
        System.Threading.Tasks.Task<string[]> GetCertificateFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/Start", ReplyAction="http://tempuri.org/IConfigurationService/StartResponse")]
        void Start();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/Start", ReplyAction="http://tempuri.org/IConfigurationService/StartResponse")]
        System.Threading.Tasks.Task StartAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/Stop", ReplyAction="http://tempuri.org/IConfigurationService/StopResponse")]
        void Stop();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/Stop", ReplyAction="http://tempuri.org/IConfigurationService/StopResponse")]
        System.Threading.Tasks.Task StopAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/IsRunning", ReplyAction="http://tempuri.org/IConfigurationService/IsRunningResponse")]
        bool IsRunning();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/IsRunning", ReplyAction="http://tempuri.org/IConfigurationService/IsRunningResponse")]
        System.Threading.Tasks.Task<bool> IsRunningAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SendMail", ReplyAction="http://tempuri.org/IConfigurationService/SendMailResponse")]
        void SendMail(Granikos.Hydra.WebClient.HydraConfigurationService.MailMessage msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SendMail", ReplyAction="http://tempuri.org/IConfigurationService/SendMailResponse")]
        System.Threading.Tasks.Task SendMailAsync(Granikos.Hydra.WebClient.HydraConfigurationService.MailMessage msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConfigurationServiceChannel : Granikos.Hydra.WebClient.HydraConfigurationService.IConfigurationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConfigurationServiceClient : System.ServiceModel.ClientBase<Granikos.Hydra.WebClient.HydraConfigurationService.IConfigurationService>, Granikos.Hydra.WebClient.HydraConfigurationService.IConfigurationService {
        
        public ConfigurationServiceClient() {
        }
        
        public ConfigurationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConfigurationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigurationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigurationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.VersionInfo GetVersionInfo() {
            return base.Channel.GetVersionInfo();
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.VersionInfo> GetVersionInfoAsync() {
            return base.Channel.GetVersionInfoAsync();
        }
        
        public string[] GetLogNames() {
            return base.Channel.GetLogNames();
        }
        
        public System.Threading.Tasks.Task<string[]> GetLogNamesAsync() {
            return base.Channel.GetLogNamesAsync();
        }
        
        public System.IO.Stream GetLogFile(string name) {
            return base.Channel.GetLogFile(name);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetLogFileAsync(string name) {
            return base.Channel.GetLogFileAsync(name);
        }
        
        public void SetProperty(string name, string value) {
            base.Channel.SetProperty(name, value);
        }
        
        public System.Threading.Tasks.Task SetPropertyAsync(string name, string value) {
            return base.Channel.SetPropertyAsync(name, value);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup[] GetLocalGroups() {
            return base.Channel.GetLocalGroups();
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup[]> GetLocalGroupsAsync() {
            return base.Channel.GetLocalGroupsAsync();
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup GetLocalGroup(int id) {
            return base.Channel.GetLocalGroup(id);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup> GetLocalGroupAsync(int id) {
            return base.Channel.GetLocalGroupAsync(id);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup UpdateLocalGroup(Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup mailboxGroup) {
            return base.Channel.UpdateLocalGroup(mailboxGroup);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup> UpdateLocalGroupAsync(Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup mailboxGroup) {
            return base.Channel.UpdateLocalGroupAsync(mailboxGroup);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup AddLocalGroup(string name) {
            return base.Channel.AddLocalGroup(name);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup> AddLocalGroupAsync(string name) {
            return base.Channel.AddLocalGroupAsync(name);
        }
        
        public bool DeleteLocalGroup(int id) {
            return base.Channel.DeleteLocalGroup(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLocalGroupAsync(int id) {
            return base.Channel.DeleteLocalGroupAsync(id);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup[] GetExternalGroups() {
            return base.Channel.GetExternalGroups();
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup[]> GetExternalGroupsAsync() {
            return base.Channel.GetExternalGroupsAsync();
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup GetExternalGroup(int id) {
            return base.Channel.GetExternalGroup(id);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup> GetExternalGroupAsync(int id) {
            return base.Channel.GetExternalGroupAsync(id);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup UpdateExternalGroup(Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup mailboxGroup) {
            return base.Channel.UpdateExternalGroup(mailboxGroup);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup> UpdateExternalGroupAsync(Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup mailboxGroup) {
            return base.Channel.UpdateExternalGroupAsync(mailboxGroup);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup AddExternalGroup(string name) {
            return base.Channel.AddExternalGroup(name);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.MailboxGroup> AddExternalGroupAsync(string name) {
            return base.Channel.AddExternalGroupAsync(name);
        }
        
        public bool DeleteExternalGroup(int id) {
            return base.Channel.DeleteExternalGroup(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteExternalGroupAsync(int id) {
            return base.Channel.DeleteExternalGroupAsync(id);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector GetDefaultReceiveConnector() {
            return base.Channel.GetDefaultReceiveConnector();
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector> GetDefaultReceiveConnectorAsync() {
            return base.Channel.GetDefaultReceiveConnectorAsync();
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector[] GetReceiveConnectors() {
            return base.Channel.GetReceiveConnectors();
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector[]> GetReceiveConnectorsAsync() {
            return base.Channel.GetReceiveConnectorsAsync();
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector GetReceiveConnector(int id) {
            return base.Channel.GetReceiveConnector(id);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector> GetReceiveConnectorAsync(int id) {
            return base.Channel.GetReceiveConnectorAsync(id);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector AddReceiveConnector(Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector connector) {
            return base.Channel.AddReceiveConnector(connector);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector> AddReceiveConnectorAsync(Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector connector) {
            return base.Channel.AddReceiveConnectorAsync(connector);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector UpdateReceiveConnector(Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector connector) {
            return base.Channel.UpdateReceiveConnector(connector);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector> UpdateReceiveConnectorAsync(Granikos.Hydra.WebClient.HydraConfigurationService.ReceiveConnector connector) {
            return base.Channel.UpdateReceiveConnectorAsync(connector);
        }
        
        public bool DeleteReceiveConnector(int id) {
            return base.Channel.DeleteReceiveConnector(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteReceiveConnectorAsync(int id) {
            return base.Channel.DeleteReceiveConnectorAsync(id);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector GetEmptySendConnector() {
            return base.Channel.GetEmptySendConnector();
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector> GetEmptySendConnectorAsync() {
            return base.Channel.GetEmptySendConnectorAsync();
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector GetDefaultSendConnector() {
            return base.Channel.GetDefaultSendConnector();
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector> GetDefaultSendConnectorAsync() {
            return base.Channel.GetDefaultSendConnectorAsync();
        }
        
        public bool SetDefaultSendConnector(int id) {
            return base.Channel.SetDefaultSendConnector(id);
        }
        
        public System.Threading.Tasks.Task<bool> SetDefaultSendConnectorAsync(int id) {
            return base.Channel.SetDefaultSendConnectorAsync(id);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector[] GetSendConnectors() {
            return base.Channel.GetSendConnectors();
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector[]> GetSendConnectorsAsync() {
            return base.Channel.GetSendConnectorsAsync();
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector GetSendConnector(int id) {
            return base.Channel.GetSendConnector(id);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector> GetSendConnectorAsync(int id) {
            return base.Channel.GetSendConnectorAsync(id);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector AddSendConnector(Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector connector) {
            return base.Channel.AddSendConnector(connector);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector> AddSendConnectorAsync(Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector connector) {
            return base.Channel.AddSendConnectorAsync(connector);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector UpdateSendConnector(Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector connector) {
            return base.Channel.UpdateSendConnector(connector);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector> UpdateSendConnectorAsync(Granikos.Hydra.WebClient.HydraConfigurationService.SendConnector connector) {
            return base.Channel.UpdateSendConnectorAsync(connector);
        }
        
        public bool DeleteSendConnector(int id) {
            return base.Channel.DeleteSendConnector(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSendConnectorAsync(int id) {
            return base.Channel.DeleteSendConnectorAsync(id);
        }
        
        public int GetLocalUserCount() {
            return base.Channel.GetLocalUserCount();
        }
        
        public System.Threading.Tasks.Task<int> GetLocalUserCountAsync() {
            return base.Channel.GetLocalUserCountAsync();
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.UsersWithTotal GetLocalUsers(int page, int perPage) {
            return base.Channel.GetLocalUsers(page, perPage);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.UsersWithTotal> GetLocalUsersAsync(int page, int perPage) {
            return base.Channel.GetLocalUsersAsync(page, perPage);
        }
        
        public string[] SearchLocalUsers(string search) {
            return base.Channel.SearchLocalUsers(search);
        }
        
        public System.Threading.Tasks.Task<string[]> SearchLocalUsersAsync(string search) {
            return base.Channel.SearchLocalUsersAsync(search);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.User GetLocalUser(int id) {
            return base.Channel.GetLocalUser(id);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.User> GetLocalUserAsync(int id) {
            return base.Channel.GetLocalUserAsync(id);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.User AddLocalUser(Granikos.Hydra.WebClient.HydraConfigurationService.User user) {
            return base.Channel.AddLocalUser(user);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.User> AddLocalUserAsync(Granikos.Hydra.WebClient.HydraConfigurationService.User user) {
            return base.Channel.AddLocalUserAsync(user);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.User UpdateLocalUser(Granikos.Hydra.WebClient.HydraConfigurationService.User user) {
            return base.Channel.UpdateLocalUser(user);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.User> UpdateLocalUserAsync(Granikos.Hydra.WebClient.HydraConfigurationService.User user) {
            return base.Channel.UpdateLocalUserAsync(user);
        }
        
        public bool DeleteLocalUser(int id) {
            return base.Channel.DeleteLocalUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLocalUserAsync(int id) {
            return base.Channel.DeleteLocalUserAsync(id);
        }
        
        public System.IO.Stream ExportLocalUsers() {
            return base.Channel.ExportLocalUsers();
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> ExportLocalUsersAsync() {
            return base.Channel.ExportLocalUsersAsync();
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult ImportLocalUsers(System.IO.Stream stream) {
            return base.Channel.ImportLocalUsers(stream);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult> ImportLocalUsersAsync(System.IO.Stream stream) {
            return base.Channel.ImportLocalUsersAsync(stream);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult ImportLocalUsersWithOverwrite(System.IO.Stream stream) {
            return base.Channel.ImportLocalUsersWithOverwrite(stream);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult> ImportLocalUsersWithOverwriteAsync(System.IO.Stream stream) {
            return base.Channel.ImportLocalUsersWithOverwriteAsync(stream);
        }
        
        public bool GenerateLocalUsers(string template, string pattern, string domain, int count) {
            return base.Channel.GenerateLocalUsers(template, pattern, domain, count);
        }
        
        public System.Threading.Tasks.Task<bool> GenerateLocalUsersAsync(string template, string pattern, string domain, int count) {
            return base.Channel.GenerateLocalUsersAsync(template, pattern, domain, count);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.UserTemplate[] GetLocalUserTemplates() {
            return base.Channel.GetLocalUserTemplates();
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.UserTemplate[]> GetLocalUserTemplatesAsync() {
            return base.Channel.GetLocalUserTemplatesAsync();
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.UsersWithTotal GetExternalUsers(int page, int perPage) {
            return base.Channel.GetExternalUsers(page, perPage);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.UsersWithTotal> GetExternalUsersAsync(int page, int perPage) {
            return base.Channel.GetExternalUsersAsync(page, perPage);
        }
        
        public int GetExternalUserCount() {
            return base.Channel.GetExternalUserCount();
        }
        
        public System.Threading.Tasks.Task<int> GetExternalUserCountAsync() {
            return base.Channel.GetExternalUserCountAsync();
        }
        
        public string[] SearchExternalUsers(string search) {
            return base.Channel.SearchExternalUsers(search);
        }
        
        public System.Threading.Tasks.Task<string[]> SearchExternalUsersAsync(string search) {
            return base.Channel.SearchExternalUsersAsync(search);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.User GetExternalUser(int id) {
            return base.Channel.GetExternalUser(id);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.User> GetExternalUserAsync(int id) {
            return base.Channel.GetExternalUserAsync(id);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.User AddExternalUser(Granikos.Hydra.WebClient.HydraConfigurationService.User user) {
            return base.Channel.AddExternalUser(user);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.User> AddExternalUserAsync(Granikos.Hydra.WebClient.HydraConfigurationService.User user) {
            return base.Channel.AddExternalUserAsync(user);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.User UpdateExternalUser(Granikos.Hydra.WebClient.HydraConfigurationService.User user) {
            return base.Channel.UpdateExternalUser(user);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.User> UpdateExternalUserAsync(Granikos.Hydra.WebClient.HydraConfigurationService.User user) {
            return base.Channel.UpdateExternalUserAsync(user);
        }
        
        public bool DeleteExternalUser(int id) {
            return base.Channel.DeleteExternalUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteExternalUserAsync(int id) {
            return base.Channel.DeleteExternalUserAsync(id);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable[] GetTimeTables() {
            return base.Channel.GetTimeTables();
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable[]> GetTimeTablesAsync() {
            return base.Channel.GetTimeTablesAsync();
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable GetTimeTable(int id) {
            return base.Channel.GetTimeTable(id);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable> GetTimeTableAsync(int id) {
            return base.Channel.GetTimeTableAsync(id);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable AddTimeTable(Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable timeTable) {
            return base.Channel.AddTimeTable(timeTable);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable> AddTimeTableAsync(Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable timeTable) {
            return base.Channel.AddTimeTableAsync(timeTable);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable UpdateTimeTable(Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable timeTable) {
            return base.Channel.UpdateTimeTable(timeTable);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable> UpdateTimeTableAsync(Granikos.Hydra.WebClient.HydraConfigurationService.TimeTable timeTable) {
            return base.Channel.UpdateTimeTableAsync(timeTable);
        }
        
        public bool DeleteTimeTable(int id) {
            return base.Channel.DeleteTimeTable(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTimeTableAsync(int id) {
            return base.Channel.DeleteTimeTableAsync(id);
        }
        
        public System.IO.Stream ExportExternalUsers() {
            return base.Channel.ExportExternalUsers();
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> ExportExternalUsersAsync() {
            return base.Channel.ExportExternalUsersAsync();
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult ImportExternalUsers(System.IO.Stream stream) {
            return base.Channel.ImportExternalUsers(stream);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult> ImportExternalUsersAsync(System.IO.Stream stream) {
            return base.Channel.ImportExternalUsersAsync(stream);
        }
        
        public Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult ImportExternalUsersWithOverwrite(System.IO.Stream stream) {
            return base.Channel.ImportExternalUsersWithOverwrite(stream);
        }
        
        public System.Threading.Tasks.Task<Granikos.Hydra.WebClient.HydraConfigurationService.ImportResult> ImportExternalUsersWithOverwriteAsync(System.IO.Stream stream) {
            return base.Channel.ImportExternalUsersWithOverwriteAsync(stream);
        }
        
        public string[] GetCertificateFiles() {
            return base.Channel.GetCertificateFiles();
        }
        
        public System.Threading.Tasks.Task<string[]> GetCertificateFilesAsync() {
            return base.Channel.GetCertificateFilesAsync();
        }
        
        public void Start() {
            base.Channel.Start();
        }
        
        public System.Threading.Tasks.Task StartAsync() {
            return base.Channel.StartAsync();
        }
        
        public void Stop() {
            base.Channel.Stop();
        }
        
        public System.Threading.Tasks.Task StopAsync() {
            return base.Channel.StopAsync();
        }
        
        public bool IsRunning() {
            return base.Channel.IsRunning();
        }
        
        public System.Threading.Tasks.Task<bool> IsRunningAsync() {
            return base.Channel.IsRunningAsync();
        }
        
        public void SendMail(Granikos.Hydra.WebClient.HydraConfigurationService.MailMessage msg) {
            base.Channel.SendMail(msg);
        }
        
        public System.Threading.Tasks.Task SendMailAsync(Granikos.Hydra.WebClient.HydraConfigurationService.MailMessage msg) {
            return base.Channel.SendMailAsync(msg);
        }
    }
}
